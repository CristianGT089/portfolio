---
// Import icons
import GitHub from '../components/icons/GitHub.astro';
import Mail from '../components/icons/Mail.astro';
import LinkedIn from '../components/icons/LinkedIn.astro';
---
<div id="relative-contact" class="bg-secondDarkGray relative py-44 w-full rounded-none flex flex-col items-center gap-4">
  <h2 class="text-4xl font-bold text-firstRed">Contact Me</h2>
  <div class="flex items-center gap-4">
    <a href="mailto:cristiansgt089@gmail.com" class="text-firstRed size-12"><Mail /></a>
    <a href="https://www.linkedin.com/in/cristian-stiven-guzman-tovar-668655217/" class="text-firstRed size-12"><LinkedIn/></a>
    <a href="https://github.com/CristianGT089" class="text-firstRed size-12"><GitHub /></a>
  </div>
</div>

<div id="fixed-contact" class="fixed bottom-0 left-1/2 transform -translate-x-1/2 mb-2 bg-secondDarkGray shadow-lg rounded-full p-2">
  <div class="flex items-center gap-4">
    <a href="mailto:cristiansgt089@gmail.com" class="text-firstRed size-7"><Mail /></a>
    <a href="https://www.linkedin.com/in/cristian-stiven-guzman-tovar-668655217/" class="text-firstRed size-7"><LinkedIn/></a>
    <a href="https://github.com/CristianGT089" class="text-firstRed size-7"><GitHub /></a>
  </div>
</div>

<script>
  if (typeof window !== "undefined") {
    document.addEventListener('DOMContentLoaded', () => {
      const relativeContact = document.getElementById('relative-contact');
      const fixedContact = document.getElementById('fixed-contact');

      // Check if both elements exist
      if (!relativeContact || !fixedContact) return;

      // Intersection Observer to watch the relative element
      const observer = new IntersectionObserver(
        ([entry]) => {
          if (entry.isIntersecting) {
            // If relative starts appearing, hide the fixed one
            fixedContact.classList.add('hidden');
          } else {
            // If relative is not visible, show the fixed one
            fixedContact.classList.remove('hidden');
          }
        },
        { rootMargin: "10px" } // Define a 10px margin to trigger detection earlier
      );

      observer.observe(relativeContact);
    });
  }
</script>
